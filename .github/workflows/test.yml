name: _test
description: Trigger LAVA tests on the build

on:
  workflow_call:

jobs:
  process_url:
    outputs:
      build_url: ${{ steps.get_build_url.outputs.result }}
    runs-on:
      group: GHA-Audioreach-SelfHosted-RG
      labels: [ self-hosted, audior-prd-u2204-x64-large-od-ephem ]
    steps:
      - name: Download presigned URL
        id: download_url
        uses: actions/download-artifact@v4
        with:
          name: presigned_url.txt
          path: ${{ github.workspace }}

      - name: Get build URL
        id: get_build_url
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs')
            const filePath = `${{ github.workspace }}/presigned_url.txt`
            const url = fs.readFileSync(filePath, 'utf8').toString().trim()
            console.log(url)
            return url

  prepare-job-list:
    runs-on:
      group: GHA-Audioreach-SelfHosted-RG
      labels: [ self-hosted, audior-prd-u2204-x64-large-od-ephem ]
    needs: process_url
    outputs:
      jobmatrix: ${{ steps.listjobs.outputs.jobmatrix }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: Audioreach/meta-ar
          
      - name: Print trigger
        run: |
          echo "Triggered by ${{ github.event_name }}"
          echo "Build URL: ${{ needs.process_url.outputs.build_url }}"
          echo "${{ needs.process_url.outputs.build_url }}"

      - name: "List jobs"
        id: listjobs
        run: |
          JOBFILES=$(find ci/lava/ -name *.yaml)
          JOBFILES=$(echo "$JOBFILES" | sed -e "s/^/\"/" | sed -e "s/$/\",/" | tr -d "\n" | sed -e "s/.$//")
          JOBFILES="[${JOBFILES}]"
          J=$(jq -cn --argjson jobfiles "$JOBFILES" '{target: $jobfiles}')
          echo "jobmatrix=$J" >> $GITHUB_OUTPUT
          echo "Preparing testjob files"

  submit-job:
    needs: [process_url, prepare-job-list]
    runs-on:
      group: GHA-Audioreach-SelfHosted-RG
      labels: [ self-hosted, audior-prd-u2204-x64-large-od-ephem ]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare-job-list.outputs.jobmatrix) }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: Audioreach/meta-ar

      - name: "Update test definition ${{ matrix.target }}"
        run: |
          TARGET=${{ matrix.target }}
          FIND_PATH="${TARGET#*/}"
          DEVICE_TYPE_PATH="${FIND_PATH%/*}"
          DEVICE_TYPE="${DEVICE_TYPE_PATH#*/}"
          BUILD_FILE_NAME="core-image-base-qcs6490-rb3gen2-core-kit.rootfs.qcomflash.tar.gz"
          BUILD_DOWNLOAD_URL="${{ needs.process_url.outputs.build_url }}"
          sed -i "s|{{DEVICE_TYPE}}|${DEVICE_TYPE}|g" "${{ matrix.target }}"
          sed -i "s|{{GITHUB_SHA}}|${GITHUB_SHA}|g" "${{ matrix.target }}"
          ESCAPED_URL=$(echo "$BUILD_DOWNLOAD_URL" | sed 's/[&/?=]/\\&/g')
          sed -i "s|{{BUILD_DOWNLOAD_URL}}|$ESCAPED_URL|g" "${{ matrix.target }}"
          sed -i "s|{{BUILD_FILE_NAME}}|${BUILD_FILE_NAME}|g" "${{ matrix.target }}"
          sed -i "s|{{GITHUB_RUN_ID}}|${GITHUB_RUN_ID}|g" "${{ matrix.target }}"
          cat "${{ matrix.target }}"

      - name: Submit ${{ matrix.target }}
        timeout-minutes: 20
        uses: foundriesio/lava-action@v6
        with:
          lava_token: ${{ secrets.LAVA_TOKEN }}
          lava_url: 'lava.infra.foundries.io'
          job_definition: ${{ matrix.target }}
          wait_for_job: true
          fail_action_on_failure: false
          save_result_as_artifact: true
          save_job_details: true
