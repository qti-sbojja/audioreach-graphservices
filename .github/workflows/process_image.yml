---
name: _process_image
description: Process Image for build url

on:
  workflow_call:
    inputs:
      docker_image:
        description: Docker Image used for test
        required: true
        type: string

env:
  IMAGE_NAME: core-image-base-qcs6490-rb3gen2-core-kit.rootfs-20250514094843.qcomflash

jobs:
  process_image:
    runs-on:
      group: GHA-Audioreach-SelfHosted-RG
      labels: [ self-hosted, audior-prd-u2204-x64-large-od-ephem ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Build docker Image
        id: get-docker-image
        uses: ./.github/actions/build_docker_image

      - name: Download build artifact
        id: download_build_artifact
        uses: actions/download-artifact@v4
        with:
          name: build.tar
          path: ${{ github.workspace }}

      - name: Extract build artifact
        id: extract_build_artifact
        shell: bash
        run: |
          #!/bin/bash
          set -e

          mkdir -p ${{ github.workspace }}/build
          echo "Extracting the build artifact"
          tar -xvf ${{ github.workspace }}/build.tar -C ${{ github.workspace }}/build
          echo "Build artifact extracted successfully"

      - name: Pull meta-ar pre compiled image
        id: pull_meta_ar
        uses: ./.github/actions/aws-s3-exchanger
        with:
          s3_bucket: qli-prd-audior-gh-artifacts
          mode: download
          download_filename: ${{ env.IMAGE_NAME }}.tar.gz
          location: Audioreach/meta-ar

      - name: Extract image and mount
        id: extract_image
        shell: bash
        run: |
          #!/bin/bash
          set -e

          echo "Extracting the image"
          tar -xvf ${{ env.IMAGE_NAME }}.tar.gz
          echo "Image extracted successfully"

          ls -l ${{ env.IMAGE_NAME }}/rootfs.img

          # Run inside the docker container
          docker run \
            --rm \
            -v $PWD:/workspace \
            -w /workspace \
            -e "IMAGE_NAME=${{ env.IMAGE_NAME }}" \
            --privileged \
            ${{ inputs.docker_image }} \
            bash -c "
              set -xe
              cd ${IMAGE_NAME}
              mkdir -p /tmp/rootfs
              sudo mount rootfs.img /tmp/rootfs
              echo "Image mounted successfully"

              # Copy the arg build files to the mounted image
              cd ..
              cp -R build/usr/lib* /tmp/rootfs/usr/lib/
              echo "Build files copied successfully"
              sync
              # Unmount the image
              sudo umount /tmp/rootfs
              echo "Image unmounted successfully"
            "
            ls -l ${{ env.IMAGE_NAME }}/rootfs.img

      - name: Create tar image for qcomflash directory
        id: create_tar_image
        shell: bash
        run: |
          #!/bin/bash
          set -e
          echo $PWD
          echo "Creating tar image for qcomflash directory"
          tar -cvf core-image-base-qcs6490-rb3gen2-core-kit.rootfs.qcomflash.tar.gz ${{ env.IMAGE_NAME }}/
          echo "Tar image created successfully"

      - name: Upload tar image
        id: upload_tar_image
        uses: ./.github/actions/aws-s3-exchanger
        with:
          s3_bucket: qli-prd-audior-gh-artifacts
          local_file: ${{ github.workspace }}/core-image-base-qcs6490-rb3gen2-core-kit.rootfs.qcomflash.tar.gz
          location: Audioreach/args
          mode: upload
